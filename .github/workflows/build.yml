# Automatically build the project and run any configured tests for every push# and submitted pull request. This can help catch issues that only occur on# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    runs-on: windows-latest
    env:
        version: version
        name: name
        game_version: game
        fabric_version: num
    steps:
      - name: Checkout del código
        uses: actions/checkout@v2

      - name: Configurar Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "17"

      - name: construcción con Gradle
        run: |
           ./gradlew.bat build
      - name: Leer y Extraer Valor del JSON
        shell: powershell
        run: |
          # Lee el contenido del archivo JSON en una variable
          $jsonContent = Get-Content -Raw -Path src/main/resources/fabric.mod.json | ConvertFrom-Json

          # Obtén el valor deseado (reemplaza 'clave' con la clave real)
         
          echo %env:name = $jsonContent.id
          echo $env:version = $jsonContent.version
          echo $env:game_version = $jsonContent.depends.minecraft
          echo $env:fabric_version = $jsonContent.depends.fabricloader
      # Asegúrate de que el archivo.json está en el mismo directorio que el flujo de trabajo
      
      - name: test json var
        run: echo "name_id:${{ env.name }}\nversion:${{ env.version }}"
      
      # Si está en una ubicación diferente, ajusta la ruta en el comando Get-Content
      - name: Crear Release en GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: build/libs/*
          tag_name: ${{ env.fabric_version }}
          name: ${{ env.name }} - ${{ env.version }}
          body: update ${{ env.name }} to versión ${{ env.version }}, use Minecraft ${{ env.game_version }} and fabrica loader ${{ env.fabric_loader }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
